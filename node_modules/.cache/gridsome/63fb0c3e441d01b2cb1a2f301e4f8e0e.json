{"remainingRequest":"/Users/tristan/Sites/biches2021/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tristan/Sites/biches2021/frontend/src/templates/Project.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tristan/Sites/biches2021/frontend/src/templates/Project.vue","mtime":1609684372952},{"path":"/Users/tristan/Sites/biches2021/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristan/Sites/biches2021/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tristan/Sites/biches2021/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristan/Sites/biches2021/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Content from '~/components/Content'\nimport { getStrapiMedia } from '~/utils/medias'\nimport { getMetaTags } from '~/utils/seo'\n\nexport default {\n  methods: {\n    getStrapiMedia,\n  },\n  components: {\n    Content,\n  },\n  metaInfo() {\n    const { title, description, coverImage } = this.$page.strapi.projects[0]\n    const image = getStrapiMedia(coverImage.url)\n    return {\n      title,\n      meta: getMetaTags(title, description, image),\n    }\n  },\n}\n",{"version":3,"sources":["Project.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Project.vue","sourceRoot":"src/templates","sourcesContent":["<template>\n  <Layout>\n    <div class=\"container\">\n      <div class=\"prose md:prose-lg mx-auto mt-10\">\n        <h1>\n          {{ $page.strapi.projects[0].title }}\n        </h1>\n        <p class=\"font-medium\">{{ $page.strapi.projects[0].description }}</p>\n        <g-image\n          :alt=\"$page.strapi.projects[0].title\"\n          :src=\"getStrapiMedia($page.strapi.projects[0].coverImage.url)\"\n        />\n      </div>\n    </div>\n    <Content :content=\"$page.strapi.projects[0].content\" class=\"mt-8\" />\n  </Layout>\n</template>\n\n<page-query>\nquery ($slug: String!) {\n  strapi {\n    projects(where: { slug: $slug }) {\n      id\n      title\n      slug\n      description\n      categories {\n        id\n        title\n      }\n      coverImage {\n        id\n        url\n      }\n      content {\n        __typename\n        ... on strapiTypes_ComponentSectionsRichText {\n          id\n          content\n        }\n        ... on strapiTypes_ComponentSectionsLargeMedia {\n          id\n          media {\n            id\n            url\n            mime\n          }\n          description\n        }\n        ... on strapiTypes_ComponentSectionsImagesSlider {\n          id\n          title\n          images {\n            id\n            url\n          }\n        }\n      }\n    }\n  }\n}\n</page-query>\n\n<script>\nimport Content from '~/components/Content'\nimport { getStrapiMedia } from '~/utils/medias'\nimport { getMetaTags } from '~/utils/seo'\n\nexport default {\n  methods: {\n    getStrapiMedia,\n  },\n  components: {\n    Content,\n  },\n  metaInfo() {\n    const { title, description, coverImage } = this.$page.strapi.projects[0]\n    const image = getStrapiMedia(coverImage.url)\n    return {\n      title,\n      meta: getMetaTags(title, description, image),\n    }\n  },\n}\n</script>\n"]}]}